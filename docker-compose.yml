version: '3.3'

# Services-Kreuzkirche Config by Niklas Arnitz 2022
# Persistent data is stored in the ./data directory
# Config files are stored in the ./config directory

services:
  # NGINX-Proxymanager
  nginx-proxymanager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      # Add any other Stream port you want to expose
    volumes:
      - ./data/nginx-proxymanager/data:/data
      - ./data/nginx-proxymanager/letsencrypt:/etc/letsencrypt

  # Nextcloud - Open Source Cloud Solution
  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      - "./config/nextcloud:/config"
      - '/mnt/data-volume/cloud:/data'
    restart: unless-stopped
    depends_on:
      - nextcloud-mariadb
    # Ports: 80, 443

  nextcloud-mariadb:
    image: ghcr.io/linuxserver/mariadb
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=mariadbpassword
      - TZ=Europe/Berlin
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=ncuser
      - MYSQL_PASSWORD=ncpassword
    volumes:
      - ./data/nextcloud-mariadb:/config
    restart: unless-stopped

  # Wordpress - Production
  wordpress-production:
    user: www-data
    image: wordpress:latest
    # Ports: 80
    volumes:
      - ./config/wordpress-production/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./data/wordpress-production/wp-app:/var/www/html/
    environment:
      WORDPRESS_DB_HOST: wordpress-production-db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: wordpress
    depends_on:
      - wordpress-production-db

  wordpress-production-db:
    user: www-data
    image: mysql:latest
    # Ports: 3306
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ./data/wordpress-production/wp-app:/docker-entrypoint-initdb.d
      - ./data/wordpress-production/db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: wordpress

  # Wordpress - Staging
  wordpress-staging:
    user: www-data
    image: wordpress:latest
    # Ports: 80
    volumes:
      - ./config/wordpress-staging/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./data/wordpress-staging/wp-app:/var/www/html/
    environment:
      WORDPRESS_DB_HOST: wordpress-staging-db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: wordpress
    depends_on:
      - wordpress-staging-db

  wordpress-staging-db:
    user: www-data
    image: mysql:latest
    # Ports: 3306
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ./data/wordpress-staging/wp-app:/docker-entrypoint-initdb.d/
      - ./data/wordpress-staging/db_data:/var/lib/mysql/
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: wordpress

networks:
  default:
    external:
      name: nginxproxymanager